@using Golfler.Models
@model Golfler.Models.GF_CourseBuilder


<style>
    .txtWidth
    {
        width: 20% !important;
    }

    input[type=radio].clsholenumber
    {
        display: none;
    }

        input[type=radio].clsholenumber + label
        {
            display: inline-block;
            margin: 2px;
            padding: 5px;
            margin-bottom: 0;
            font-size: 14px;
            line-height: 20px;
            color: #fff;
            text-align: center;
            vertical-align: middle;
            cursor: pointer;
            background-color: #e4961a;
            border-radius: 100px;
            height: 20px;
            width: 20px;
        }

    /*input[type=radio].clsholenumber:checked + label
        {
            outline: 0;
            background-color: #04d762;
        }*/

    .clsSelectedHole + label
    {
        display: inline-block;
        margin: 2px;
        padding: 5px;
        margin-bottom: 0;
        font-size: 14px;
        line-height: 20px;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        border-radius: 100px;
        height: 20px;
        width: 20px;
        outline: 0;
        background-color: #04d762 !important;
    }
</style>
<style type="text/css">
    .widthDatepicker
    {
        width: 20% !important;
    }

    .gmnoprint img
    {
        max-width: none;
    }

    .gm-style img
    {
        max-width: none;
    }

    #Status
    {
        padding: 8px 0 !important;
        width: 10% !important;
    }
</style>

<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css"
    rel="stylesheet" type="text/css" />
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>*@
<script type="text/javascript" src="https://maps-api-ssl.google.com/maps/api/js?sensor=false"></script>

<script src="@Url.Content("~/Scripts/RecurringJS/RecurringDates.js")" type="text/javascript"></script>

<script type="text/javascript">
    var submitResult = "";
    function removejsfile(filename) {
        //  alert("remove start");
        var targetelement = "script";
        var targetattr = "src";
        var allsuspects = document.getElementsByTagName(targetelement)
        for (var i = allsuspects.length; i >= 0; i--) { //search backwards within nodelist for matching elements to remove
            if (allsuspects[i] && allsuspects[i].getAttribute(targetattr) != null && allsuspects[i].getAttribute(targetattr).indexOf(filename) != -1) {
                allsuspects[i].parentNode.removeChild(allsuspects[i]) //remove element by calling parentNode.removeChild()
                //alert("file");
            }
        }
    }

    $(document).ready(function () {


        //if ($("#hdnBuilderType").val() == "CourseAdmin") {
        //    $("#dvForCourseAdmin").show();
        //    $("#dvForGolfer").hide();
        //}

        if ($("#hdnRecDateMsg").val() != "") {
            alert($("#hdnRecDateMsg").val());
        }

        initialize('@ViewBag.Lattitude', '@ViewBag.Longitude');
       
        if ($("#hdnBuilderType").val() == "CourseAdmin") {
            if ($("#hdnRecDates").val() != "") {
                $('#rdSetTemporary').attr('checked', true);

                $("#pRecDesc").show();
                if (($("#spnRecDesc").text() == "") && ($("#spnRecDesc").text() == "-")) {
                    $("#ancEditDates").hide();
                }
                else {
                    $("#ancEditDates").show();
                }

                if ($('#hdnCourseBuilderId').val() != "" && $('#hdnCourseBuilderId').val() != "undefined" && $('#hdnCourseBuilderId').val() != "0") {
                    if ($('#hdnCourseBuilderId').val() == "0000") {
                        //   alert("start");
                        $.ajax({
                            type: "GET",
                            url: "/Golfler/CourseAdmin/GetCourseBuilder",
                            data: { id: 0, strCourseId: $("#hdnCourseId").val(), holenumber: 0, coordinatetype: "onlyCourseName" },
                            success: function (msg) {
                                $('#lblCourseName').text(msg.coursename);
                            }
                        });
                    }
                    else {
                        GetCourseBuilder($('#hdnCourseBuilderId').val(), 1, 'temp')
                    }
                }
                else {
                    GetCourseBuilder(0, 1, 'new')
                }
            }
            else {
                
                $("#pRecDesc").hide();               
                $("#ancEditDates").hide();              
                $('#rdLoadOriginal').attr('checked', true);               
                GetCourseBuilder($('#hdnCourseBuilderId').val(), 1, 'org') // '0' is used for defualt(i.e. Orignal) load. and 1 is used for Hole number 1 by default
            }
        }
        else {
            $("#pRecDesc").hide();
            $("#ancEditDates").hide();
            $('#rdLoadOriginal').attr('checked', true);
            GetCourseBuilder($('#hdnCourseBuilderId').val(), 1, 'org') // '0' is used for defualt(i.e. Orignal) load. and 1 is used for Hole number 1 by default
        }
        //GetCourseBuilder(0, 1); 


        //  $("#Status").addClass("ddlForAdmin");
        $("#rdHoleNumber1").addClass("clsSelectedHole");

        var holeNumber = 1;
        $('input[name="HoleNumber"]').change(function () {
            $("#divProgress").show();
            var doSave = "no";
            if ($("#hdnBuilderType").val() == "CourseAdmin") {
                doSave = "yes";
            }
            else {
                if ($("#hdnBuilderType").val() == "Golfer") {
                    if ($("#rbnSuggestCoordinate").is(":checked")) {
                        doSave = "yes";
                    }
                }
                else {
                    doSave = "no";
                }
            }

            if (doSave == "yes") {
                submitResult = "";

                // save data
                save("saveonlyhole")
                // alert(submitResult);
                $("#divProgress").show();
                if (submitResult == "Success") {
                    //  debugger;
                    var intholenumber = $(this).val();

                    if ($("#hdnBuilderType").val() == "Golfer") {
                        GetCourseBuilder($('#hdnCourseBuilderId').val(), intholenumber, 'GolferCoordinate');
                    }
                    else {
                        if ($("#rdSetTemporary").is(":checked")) {
                            GetCourseBuilder($('#hdnCourseBuilderId').val(), intholenumber, 'temp');
                        }
                        else {
                            GetCourseBuilder($('#hdnCourseBuilderId').val(), intholenumber, 'org');
                        }
                    }
                    //  refreshmap(intholenumber);

                    //if ($(this).is(":checked"))
                    holeNumber = $(this).attr('data-hole-number');
                    //else
                    //    holeNumber = 0;

                    $(".clsholenumber").each(function () {
                        if ($(this).val() == intholenumber) {
                            $(this).addClass("clsSelectedHole");
                        }
                        else {
                            $(this).removeClass("clsSelectedHole");
                        }
                    });
                }
                else {
                    $(".clsholenumber").each(function () {
                        var clsList = $(this).attr('class');
                        if (clsList.indexOf('clsSelectedHole') > 0) {
                            holeNumber = $(this).attr('data-hole-number');
                            $(this).attr("checked", true);
                        }
                    });
                }
            }
            else {
                var intholenumber = $(this).val();
                GetCourseBuilder($('#hdnCourseBuilderId').val(), intholenumber, 'org');

                //if ($(this).is(":checked"))
                holeNumber = $(this).attr('data-hole-number');
                //else
                //    holeNumber = 0;

                $(".clsholenumber").each(function () {
                    if ($(this).val() == intholenumber) {
                        $(this).addClass("clsSelectedHole");
                    }
                    else {
                        $(this).removeClass("clsSelectedHole");
                    }
                });
            }
            $("#divProgress").hide();
        });

        $('input:radio[name=CoordinateType]').change(function () {
            if ($(this).val() == '@CoordinateType.LoadOriginal') {
                if (confirm('Do you want to load orignal co-ordinate?')) {
                    $("#hdnGolferLoadType").val("org");
                    GetCourseBuilder(0, 1, 'org'); // '0' is used for defualt(i.e. Orignal) load. and 1 is used for Hole number 1 by default
                }
                else {
                    $('#rdSetTemporary').attr('checked', true);
                }
            }
            else {
                openPopup();
            }
        });

        $('input:radio[name=GolferCoordinateType]').change(function () {

            if ($(this).val() == '@CoordinateType.LoadOriginal') {
                if (confirm('Do you want to view orignal co-ordinate?')) {
                    $("#hdnGolferLoadType").val("org");
                    GetCourseBuilder(0, 1, 'org'); // '0' is used for defualt(i.e. Orignal) load. and 1 is used for Hole number 1 by default
                }
                $('#rbnOriginalView').attr('checked', true);
                $("#btnSubmit").hide();
                $("#divGolferComments").hide();

                //$("#dvForCourseAdmin").hide();
                //$("#dvForGolfer").show();
            }
            else {
                $("#hdnGolferLoadType").val("suggest");
                GetCourseBuilder(0, 1, 'GolferCoordinate');

                $("#btnSubmit").show();
                $("#divCourseBuildInformation").hide();
                $("#divGolferComments").show();
                $("#divSuperAdmin").hide();
                $("#txtComments").addClass("red-border");
                $("#rbnSuggestCoordinate").attr('checked', true);

                //$("#dvForCourseAdmin").show();
                //$("#dvForGolfer").hide();
            }

        });

        $("#dragWhiteTee").draggable({
            helper: 'clone',
            stop: function (e, ui) {
                //alert(e.pageX);
                //alert(e.pageY);
                // console.log('x: ' + e.pageX + ' -- y: ' + e.pageY);
                //var point = new google.maps.Point(e.pageX, e.pageY); - 297        - 515
                //   alert($("#map_canvas").width());
                //  alert($("#map_canvas").height());

                //var lessX = $(window).width() - 1294;
                //var lessY = $(window).height() - 167;

                //var lessX = $("#map_canvas").width() - 1294;
                //var lessY = $("#map_canvas").height() - 167;

                // alert(lessX);
                var point = new google.maps.Point(e.pageX - 297, e.pageY - 580);
                var ll = overlay.getProjection().fromContainerPixelToLatLng(point);
                var icon = $(this).attr('src');
                var dragItem = $(this).attr('data-item-type') + ', Hole Number: ' + holeNumber;

                if (holeNumber > 0) {
                    if (checkHole(holeNumber, dragItem)) {
                        placeMarker(ll, icon, dragItem, holeNumber, true);
                    }
                    else {
                        alert('Please select another hole to drag tee/flag. This hole is already occupied by another tee/flag.');
                    }
                }
                else
                    alert('Please select hole to drag tee.');
            }
        });
        $("#dragRedTee").draggable({
            helper: 'clone',
            stop: function (e, ui) {
                //console.log('x: ' + e.pageX + ' -- y: ' + e.pageY);
                //var point = new google.maps.Point(e.pageX, e.pageY);
                var point = new google.maps.Point(e.pageX - 297, e.pageY - 580);
                var ll = overlay.getProjection().fromContainerPixelToLatLng(point);
                var icon = $(this).attr('src');
                var dragItem = $(this).attr('data-item-type') + ', Hole Number: ' + holeNumber;

                if (holeNumber > 0) {
                    if (checkHole(holeNumber, dragItem)) {
                        placeMarker(ll, icon, dragItem, holeNumber, true);
                    }
                    else {
                        alert('Please select another hole to drag tee/flag. This hole is already occupied by another tee/flag.');
                    }
                }
                else
                    alert('Please select hole to drag tee.');
            }
        });
        $("#dragBlueTee").draggable({
            helper: 'clone',
            stop: function (e, ui) {
                //console.log('x: ' + e.pageX + ' -- y: ' + e.pageY);
                //var point = new google.maps.Point(e.pageX, e.pageY);
                var point = new google.maps.Point(e.pageX - 297, e.pageY - 580);
                var ll = overlay.getProjection().fromContainerPixelToLatLng(point);
                var icon = $(this).attr('src');
                var dragItem = $(this).attr('data-item-type') + ', Hole Number: ' + holeNumber;

                if (holeNumber > 0) {
                    if (checkHole(holeNumber, dragItem)) {
                        placeMarker(ll, icon, dragItem, holeNumber, true);
                    }
                    else {
                        alert('Please select another hole to drag tee/flag. This hole is already occupied by another tee/flag.');
                    }
                }
                else
                    alert('Please select hole to drag tee.');
            }
        });

        $("#dragWhiteFlag").draggable({
            helper: 'clone',
            stop: function (e) {
                //var point = new google.maps.Point(e.pageX, e.pageY);
                var point = new google.maps.Point(e.pageX - 297, e.pageY - 580);
                var ll = overlay.getProjection().fromContainerPixelToLatLng(point);
                var icon = $(this).attr('src');
                var dragItem = $(this).attr('data-item-type') + ' Flag, Hole Number: ' + holeNumber;;

                if (holeNumber > 0) {
                    if (checkHole(holeNumber, dragItem)) {
                        placeMarker(ll, icon, dragItem, holeNumber, true);
                    }
                    else {
                        alert('Please select another hole to drag tee/flag. This hole is already occupied by another tee/flag.');
                    }
                }
                else
                    alert('Please select hole to drag flag.');
            }
        });

        $("#btnConfirm").fancybox({
            'hideOnOverlayClick': false,
            'scrolling': 'no',
            'onStart': function () {
                $("#divProgress").hide();
                $("#myModal").css("display", "block");
            },
            'onClosed': function () {
                // alert(testvar);
                // OpenRecurringPopUp();
                //alert(RecurringDates);
                if (checkstatus != "submit") {
                    RecurringDates = "Close";
                }

                // alert(checkstatus);
                var hdnSiteUrl = document.getElementById("hdnSiteUrl").value;
                var courseBuilderId = document.getElementById("hdnCourseBuilderId").value;
                var coursebuildertitle = document.getElementById("Title").value;

                //  $.ajax({
                //        type: 'POST',
                //        url: '@Url.Action("SetRecurringDates", "CourseAdmin")',
                //        data: { RecurringDates: RecurringDates, RecDateDescription: RecDateDescription, coursebuildertitle: coursebuildertitle },
                //        success: function (data) {
                //         }
                //     }); 

                //alert(hdnSiteUrl);
                //   window.location.href = hdnSiteUrl + "/Golfler/CourseAdmin/CheckRecurringDates?courseBuilderId=" + courseBuilderId;

                window.location.href = hdnSiteUrl + "/Golfler/CourseAdmin/CheckRecurringDates?RecurringDates=" + RecurringDates + "&RecDateDescription=" + RecDateDescription + "&courseBuilderId=" + courseBuilderId + "&coursebuildertitle=" + coursebuildertitle;

            }
        });


        $("#btnTempSettings").click(function () {
            $("#divProgress").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("testRecurring", "CourseAdmin")',
                data: {},
                success: function (data) {
                    //  $("#myModal").html(data);
                    document.getElementById("myModal").innerHTML = data;
                }
            });

            var hdnSiteUrl = $("#hdnSiteUrl").val();

            var head = document.getElementsByTagName('head')[0];
            var script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = hdnSiteUrl + '/Scripts/RecurringJS/prototype.js';
            head.appendChild(script);

            //script = document.createElement('script');
            //script.type = 'text/javascript';
            //script.src = hdnSiteUrl + '/Scripts/RecurringJS/RecurringDates.js';
            //head.appendChild(script);

            script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = hdnSiteUrl + '/Scripts/RecurringJS/date.js';
            head.appendChild(script);

            script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = hdnSiteUrl + '/Scripts/RecurringJS/recurrence.js';
            head.appendChild(script);

            //$.getScript(hdnSiteUrl + '/Scripts/RecurringJS/RecurringDates.js');
            $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/prototype.js');
            $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/date.js');
            $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/recurrence.js');

            $("#btnConfirm").click();
        });


        if ($("#hdnBuilderType").val() == "CourseAdmin") {
            $("#divCourseBuildInformation").show();
            $("#divGolferComments").hide();
            $("#divSuperAdmin").hide();
        }
        else {
            if ($("#hdnBuilderType").val() == "SuperAdmin") {
                $("#divCourseBuildInformation").hide();
                $("#divGolferComments").hide();
                $("#divSuperAdmin").show();
            }
            else {
                $("#btnSubmit").hide();
                $("#divCourseBuildInformation").hide();
                $("#divGolferComments").hide();
                $("#divSuperAdmin").hide();
                $("#txtComments").addClass("red-border");
            }
        }

        if ($("#hdnBuilderType").val() == "Golfer") {
            //$("#dvForCourseAdmin").hide();
            //$("#dvForGolfer").show();

            $("#hdnGolferLoadType").val("suggest");
            GetCourseBuilder(0, 1, 'GolferCoordinate');

            $("#btnSubmit").show();
            $("#divCourseBuildInformation").hide();
            $("#divGolferComments").show();
            $("#divSuperAdmin").hide();
            $("#txtComments").addClass("red-border");
            $("#rbnSuggestCoordinate").attr('checked', true);

            //$("#dvForCourseAdmin").show();
            //$("#dvForGolfer").hide();


        }

    });

    function openPopup() {
        var msg = "";


        if ($("#hdnBuilderType").val() == "CourseAdmin") {
            if ($("#Title").val() == "") {
                if (msg == "") {
                    msg = "Please enter Title.";
                }
                else {
                    msg = msg + "\n Please enter Title.";
                }
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/Golfler/CourseAdmin/CheckCourseBuildTitle",
                    data: { title: $("#Title").val(), CourseBuilderId: $('#hdnCourseBuilderId').val() },
                    async: false,
                    success: function (data) {
                        if (data.result) {
                            // do 
                        }
                        else {
                            if (msg == "") {
                                msg = data.Message;
                            }
                            else {
                                msg = msg + "\n " + data.Message;
                            }
                        }
                    }
                });
            }

        }

        if (msg == "") {
            $('#markerDetail').text('');
            $('input:radio[name=HoleNumber]').each(function () { $(this).attr('checked', false); });
            clearMarkers(null);
            markers = [];
            OpenRecurringPopUp();
        }
        else {
            alert(msg);
            var lengthVar = $("#spnRecDesc").text().length;

            if (lengthVar <= 1) {

                $('#rdLoadOriginal').attr('checked', true);
            }

            return false;
        }
    }
</script>
<script type="text/javascript">
    var $map;
    var $latlng;
    var overlay;

    var bufferMarker = [];
    var markers = [];
    var uniqueId = 1;

    function initialize(lat, lng) {
        var $latlng = new google.maps.LatLng(lat, lng);
        var myOptions = {
            zoom: 18,
            center: $latlng,
            mapTypeId: google.maps.MapTypeId.SATELLITE,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
                position: google.maps.ControlPosition.TOP_LEFT
            },
            zoomControl: true,
            zoomControlOptions: {
                style: google.maps.ZoomControlStyle.LARGE,
                position: google.maps.ControlPosition.LEFT_TOP
            },
            scaleControl: true,
            scaleControlOptions: {
                position: google.maps.ControlPosition.TOP_LEFT
            },
            streetViewControl: false,

            panControl: false,
        };
        $map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

        overlay = new google.maps.OverlayView();
        overlay.draw = function () { };
        overlay.setMap($map);
    }

    function placeMarker(location, icon, dragItem, holeNumber, markervisible) {
        var CanDrag = true;
        if ($("#hdnBuilderType").val() == "SuperAdmin") {
            CanDrag = false;
        }
        if (($("#hdnBuilderType").val() == "Golfer") && ($("#rbnOriginalView").is(":checked"))) {
            CanDrag = false;
        }
        if ($("#hdnBuilderType").val() == "Golfer") {
            if (dragItem.indexOf('Tee') > 0) {
                CanDrag = false;
            }
        }
        //alert(dragItem);

        var marker = new google.maps.Marker({
            position: location,
            map: $map,
            icon: icon,
            draggable: CanDrag,
            animation: google.maps.Animation.DROP,
            title: dragItem,
            visible: markervisible
        });

        bufferMarker.push(marker);

        marker.id = uniqueId;

        item = {};
        item["markerID"] = uniqueId; //Set unique id
        item["holeNumber"] = holeNumber;
        item["latitude"] = marker.position.lat();
        item["longitude"] = marker.position.lng();
        item["dragItem"] = marker.title;

        //Save marker in array list
        markers.push(item);
        //console.log(markers);

        //Increment unique id by 1
        uniqueId++;

        //$('#markerDetail').text('Hole number: ' + holeNumber + ', Drag Item: ' + marker.title + ', Latitude: ' + marker.position.lat() + ', Longitude: ' + marker.position.lng());
        $('#markerDetail').text('Drag Item: ' + marker.title);

        var hNum;
        google.maps.event.addListener(marker, 'dragstart', function (event) {
            hNum = getHoleNumberByID(this.id);
        });

        google.maps.event.addListener(marker, 'drag', function (event) {
            //$('#markerDetail').text('Hole number: ' + hNum + ', Drag Item: ' + this.title + ', Latitude: ' + event.latLng.lat() + ', Longitude: ' + event.latLng.lng());
            $('#markerDetail').text('Drag Item: ' + marker.title);
        });

        google.maps.event.addListener(marker, 'dragend', function (event) {
            //$('#markerDetail').text('Hole number: ' + hNum + ', Drag Item: ' + this.title + ', Latitude: ' + event.latLng.lat() + ', Longitude: ' + event.latLng.lng());
            $('#markerDetail').text('Drag Item: ' + marker.title);

            var holeNumber;
            var markerID;

            //Update the Latitude/Longitude
            for (var i in markers) {

                if (markers[i].markerID == this.id) {

                    holeNumber = markers[i].holeNumber; //Hold the old hole number
                    markerID = markers[i].markerID; //Hold the old hole id

                    markers.splice(i, 1);//Delete the marker data

                    item = {};
                    item["markerID"] = markerID;
                    item["holeNumber"] = holeNumber;
                    item["latitude"] = event.latLng.lat();
                    item["longitude"] = event.latLng.lng();
                    item["dragItem"] = this.title;
                    markers.push(item);

                    //console.log(markers);
                }
            }
        });

        //Delete marker by double click on marker
        google.maps.event.addListener(marker, "dblclick", function (event) {
            //Delete marker data of clicked marker from array list
            for (var i in markers) {
                if (markers[i].markerID == this.id) {
                    markers.splice(i, 1);
                    //console.log(markers);
                }
            }
            marker.setMap(null);
        });

        //Title Popup
        var infowindow = new google.maps.InfoWindow({
            content: 'Drag Item: ' + marker.title
        });

        //Title Popup
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open($map, marker);
        });
    }

    function clearMarkers(map) {
        for (var i = 0; i < bufferMarker.length; i++) {
            bufferMarker[i].setMap(map);
        }
        markers = [];
    }

    //Check wheather the hole is assigned or not
    function checkHole(holeNumber, dragItem) {

        var flag = true;

        if (markers.length > 0) {
            for (var i in markers) {
                if (markers[i].holeNumber == holeNumber && markers[i].dragItem == dragItem) {
                    flag = false;
                }
            }
        }

        return flag;
    }

    function getHoleNumberByID(id) {

        var holeNumber = 0;

        for (var i in markers) {
            if (markers[i].markerID == id) {
                holeNumber = markers[i].holeNumber;
            }
        }

        return holeNumber;
    }

    function save(callfrom) {
        $("#divProgress").show();
        var msg = "";

        if ($("#hdnBuilderType").val() == "Golfer") {
            if ($("#txtComments").val() == "") {
                if (msg == "") {
                    msg = "Please enter Comments.";
                }
                else {
                    msg = msg + "\n Please enter Comments.";
                }
            }
        }

        var isOrignalExists = "";
        if ($("#hdnBuilderType").val() == "CourseAdmin") {
            if ($("#Title").val() == "") {
                if (msg == "") {
                    msg = "Please enter Title.";
                }
                else {
                    msg = msg + "\n Please enter Title.";
                }
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/Golfler/CourseAdmin/CheckCourseBuildTitle",
                    data: { title: $("#Title").val(), CourseBuilderId: $('#hdnCourseBuilderId').val() },
                    async: false,
                    success: function (data) {
                        if (data.result) {
                            // do 
                        }
                        else {
                            if (msg == "") {
                                msg = data.Message;
                            }
                            else {
                                msg = msg + "\n " + data.Message;
                            }
                        }
                    }
                });
            }

            if (($('#hdnCourseBuilderId').val() == "0" || $('#hdnCourseBuilderId').val() == "" || $('#hdnCourseBuilderId').val() == "undefined") && ($("#rdLoadOriginal").is(":checked"))) {
                $.ajax({
                    type: "POST",
                    url: "/Golfler/CourseAdmin/CheckCourseBuildOrignal",
                    data: {},
                    async: false,
                    success: function (data) {
                        if (data.result) {
                            isOrignalExists = "yes";
                        }
                    }
                });
            }
        }

        if (markers.length <= 0) {
            if (msg == "") {
                msg = "Please setup atleast one hole.";
            }
            else {
                msg = msg + "\n Please setup atleast one hole.";
            }
        }

        var doContinue = "yes";
        if (isOrignalExists == "yes" && msg == "") {
            $("#divProgress").hide();
            if (confirm("Original Co-ordinates are already exists. Current information will be update in the existing record. Are you sure you want to continue?")) {
                doContinue = "yes";
            }
            else {
                doContinue = "no";
            }

        }

        if (doContinue == "yes") {
            $("#divProgress").show();
            if (msg == "") {
                $('input[name="holesDetail"]').val(markers);
                SaveCourseBuilder(callfrom);
            }
            else {
                alert(msg);
                submitResult = "Validation Fail";
                return false;
            }
            $("#divProgress").hide();
        }
        else {
            submitResult = "Validation Fail";
            return false;
        }
    }

    function SaveCourseBuilder(callfrom) {
        var title = $('#Title').val();
        var cType = $('input[name="CoordinateType"]').filter(':checked').val();
        var from = "01/01/1111"; // $('input[name="DateFrom"]').val();
        var to = "01/01/1111"; //$('input[name="DateTo"]').val();
        var buildBy = $('#hdnBuilderType').val();
        var courseid = $('#hdnCourseId').val();
        var golferComments = "";
        if ($("#hdnBuilderType").val() == "Golfer") {
            golferComments = $('#txtComments').val();
        }

        var CourseBuilderId = 0;
        //try
        //{
        if ($('#hdnCourseBuilderId').val() != "" && $('#hdnCourseBuilderId').val() != "undefined") {
            CourseBuilderId = $('#hdnCourseBuilderId').val();
        }
        //}
        //catch
        //{
        //    CourseBuilderId = 0;
        //}

        var status = "";
        if ($("#hdnBuilderType").val() == "SuperAdmin") {
            //  CourseBuilderId = $('#hdnCourseBuilderId').val();
            status = $('#Status').val();
        }
        //  alert(JSON.stringify(markers));
        $.ajax({
            type: "POST",
            url: "/Golfler/CourseAdmin/CourseBuilder",
            data: { buildBy: buildBy, courseid: courseid, golferComments: golferComments, title: title, coordinateType: cType, dateFrom: from, dateTo: to, CourseBuilderId: CourseBuilderId, status: status, holesDetail: JSON.stringify(markers), callfrom: callfrom },
            async: false,
            success: function (msg) {
                if (msg.result) {
                    if (callfrom == "saveonlyhole") {
                        submitResult = "Success";
                        $('#hdnCourseBuilderId').val(msg.intNewCourseBuilderId);
                    }
                    else {
                        if ($("#hdnBuilderType").val() == "CourseAdmin") {
                            window.scrollTo(0, 0);
                            alert('Record submitted successfully.');
                            submitResult = "Success";
                            $('#hdnCourseBuilderId').val(msg.intNewCourseBuilderId);
                            $("#list").trigger("reloadGrid", [{ current: true }]);
                        }
                        else {
                            alert('Record submitted successfully.');

                            if ($("#hdnBuilderType").val() == "Golfer") {
                                $('#rbnOriginalView').attr('checked', false);
                                $("#rbnSuggestCoordinate").attr('checked', true);
                                $("#hdnGolferLoadType").val("suggest");
                                GetCourseBuilder(0, 1, 'GolferCoordinate');
                                $("#list").trigger("reloadGrid", [{ current: true }]);

                                holeNumber = "1";
                                $(".clsholenumber").each(function () {
                                    if ($(this).val() == 1) {
                                        $(this).addClass("clsSelectedHole");
                                    }
                                    else {
                                        $(this).removeClass("clsSelectedHole");
                                    }
                                });
                            }

                            if ($("#hdnBuilderType").val() == "CourseAdmin") {
                                $("#hdnGolferLoadType").val("org");
                                $('#hdnCourseBuilderId').val(msg.intNewCourseBuilderId);
                                GetCourseBuilder(0, 1, 'new');
                                $("#list").trigger("reloadGrid", [{ current: true }]);

                            }

                            if ($("#hdnBuilderType").val() == "SuperAdmin") {
                                $("#hdnGolferLoadType").val("org");
                                GetCourseBuilder(0, 1, 'new');
                            }
                        }
                    }
                    submitResult = "Success";

                }
                else {
                    alert(msg.Message);
                    submitResult = "submit fail";
                    return false;
                }

            }
        });
    }

    function refreshmap(intHoleNumber) {
        //for (var i = 0; i < bufferMarker.length; i++) {
        //    bufferMarker[i].setMap(null);
        //}

        for (var j in markers) {

            var geocoder = new google.maps.Geocoder();             // create a geocoder object
            var location = new google.maps.LatLng(markers[j].latitude, markers[j].longitude);

            var icon = '';

            if (markers[j].dragItem.toLowerCase().indexOf("white") >= 0) {
                icon = '/images/CourseImage/tee_white.png';
            }
            if (markers[j].dragItem.toLowerCase().indexOf("red") >= 0) {
                icon = '/images/CourseImage/tee_red.png';
            }
            if (markers[j].dragItem.toLowerCase().indexOf("blue") >= 0) {
                icon = '/images/CourseImage/tee_blue.png';
            }
            if (markers[j].dragItem.toLowerCase().indexOf("flag") >= 0) {
                icon = '/images/CourseImage/flag_white.png';
            }

            var markervisible = false;
            alert(intHoleNumber);
            alert(markers[j].holeNumber);
            if (markers[j].holeNumber == intHoleNumber) {
                alert("true");
                markervisible = true;
            }
            else {
                markervisible = false;
            }

            placeMarker(location,
                        icon,
                        markers[j].dragItem,
                        markers[j].holeNumber,
                        markervisible);
        }
    }

    function GetCourseBuilder(id, holenumber, coordinatetype) {

        if (coordinatetype == "new" || coordinatetype == "newRecord") {
            $("#spnRecDesc").text("");
            $("#pRecDesc").hide();
            $("#ancEditDates").hide();
        }

        clearMarkers(null);
        var courseid = $("#hdnCourseId").val();

        if ($("#hdnBuilderType").val() == "SuperAdmin") {
            id = $('#hdnCourseBuilderId').val();
            coordinatetype = "GolferCoordinate"; // in case of super admin , co-ordinate type always will be golfer
        }

        // new functionality.. now we will call all data for all holes


        //if (!(($("#hdnBuilderType").val() == "Golfer") && ($("#hdnGolferLoadType").val() == "suggest"))) {
        //    holenumber = 0;
        //}
       
        $.ajax({
            type: "GET",
            url: "/Golfler/CourseAdmin/GetCourseBuilder",
            data: { id: id, strCourseId: courseid, holenumber: 0, coordinatetype: coordinatetype },
            success: function (msg) {
                if (msg.result) {
                    if (msg.data.length > 0) {
                        //$('#rdHoleNumber1').attr('checked', true);
                        
                        for (var i in msg.data) {

                            $('#hdnCourseBuilderId').val(msg.data[i].coursebuilderid)
                            $('#Title').val(msg.data[i].title);
                            $('#lblCourseName').text(msg.data[i].courseName);
                            if (msg.data[i].CoordinateType == '@CoordinateType.LoadOriginal') {
                                $('#rdLoadOriginal').attr('checked', true);
                                $("#pRecDesc").hide();
                                $("#ancEditDates").hide();
                            }
                            else {
                                $('#rdSetTemporary').attr('checked', true);
                                $("#pRecDesc").show();
                                $("#ancEditDates").show();
                                if (msg.data[i].Comments == "") {
                                    $("#spnRecDesc").text("-");

                                }
                                else {
                                    $("#spnRecDesc").text(msg.data[i].Comments);
                                }
                            }

                            if ($("#hdnBuilderType").val() == "Golfer") {
                                $("#txtComments").val(msg.data[i].Comments);

                                if ($("#hdnGolferLoadType").val() == "suggest") {
                                    $("#rbnSuggestCoordinate").attr("checked", true);
                                    $("#btnSubmit").show();
                                    $("#divGolferComments").show();
                                }
                                else {
                                    $("#rbnOriginalView").attr("checked", true);
                                    $("#btnSubmit").hide();
                                    $("#divGolferComments").hide();
                                }


                            }

                            if (holenumber == 0) {

                            }

                            $('#DateFrom').val(msg.data[i].DateFrom);
                            $('#DateTo').val(msg.data[i].DateTo);

                            var holeData = msg.data[i].HoleDetail;

                            for (var j in holeData) {

                                var geocoder = new google.maps.Geocoder();             // create a geocoder object
                                var location = new google.maps.LatLng(holeData[j].latitude, holeData[j].longitude);

                                var icon = '';

                                if (holeData[j].dragItem.toLowerCase().indexOf("white") >= 0) {
                                    icon = '/images/CourseImage/tee_white.png';
                                }
                                if (holeData[j].dragItem.toLowerCase().indexOf("red") >= 0) {
                                    icon = '/images/CourseImage/tee_red.png';
                                }
                                if (holeData[j].dragItem.toLowerCase().indexOf("blue") >= 0) {
                                    icon = '/images/CourseImage/tee_blue.png';
                                }
                                if (holeData[j].dragItem.toLowerCase().indexOf("flag") >= 0) {
                                    icon = '/images/CourseImage/flag_white.png';
                                }

                                var markervisible = false;

                                if (holeData[j].holeNumber == holenumber) {
                                    markervisible = true;
                                }

                                placeMarker(location,
                                            icon,
                                            holeData[j].dragItem,
                                            holeData[j].holeNumber,
                                            markervisible);
                            }

                            break;
                        }
                    }
                    else {
                        //Do Nothing
                    }
                }
                else {
                    //Do Nothing
                }
            }
        });
    }

    function OpenRecurringPopUp() {
        // alert("start open");
        $("#divProgress").show();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("testRecurring", "CourseAdmin")',
            data: {},
            success: function (data) {
                // $("#myModal").html(data);
                document.getElementById("myModal").innerHTML = data;
            }
        });

        var hdnSiteUrl = $("#hdnSiteUrl").val();

        var head = document.getElementsByTagName('head')[0];
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = hdnSiteUrl + '/Scripts/RecurringJS/prototype.js';
        head.appendChild(script);


        //  script = document.createElement('script');
        //script.type = 'text/javascript';
        //script.src = hdnSiteUrl + '/Scripts/RecurringJS/RecurringDates.js';
        //head.appendChild(script);

        script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = hdnSiteUrl + '/Scripts/RecurringJS/date.js';
        head.appendChild(script);

        script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = hdnSiteUrl + '/Scripts/RecurringJS/recurrence.js';
        head.appendChild(script);

        $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/prototype.js');
        //$.getScript(hdnSiteUrl + '/Scripts/RecurringJS/RecurringDates.js');
        $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/date.js');
        $.getScript(hdnSiteUrl + '/Scripts/RecurringJS/recurrence.js');

        $("#btnConfirm").click();
    }

    function clearPageData() {
        $('#Title').val('');
        // $('#DateFrom').val('');
        // $('#DateTo').val('');
        $('#markerDetail').text('');
        $('input:radio[name=HoleNumber]').each(function () { $(this).attr('checked', false); });
        clearMarkers(null);
        markers = [];
    }
</script>

<input type="hidden" name="hdnGolferLoadType" id="hdnGolferLoadType" value="org" />
<input type="hidden" name="holesDetail" />
<input type="hidden" id="hdnRecDates" name="hdnRecDates" value="@ViewBag.RecDates" />
<input type="hidden" id="hdnRecDescription" name="hdnRecDescription" value="@ViewBag.RecDescripton" />
<input type="hidden" id="hdnRecDateMsg" name="hdnRecDateMsg"   value="@ViewBag.RecDateMsg" />
<input type="hidden" id="hdnSiteUrl" value='@System.Web.Configuration.WebConfigurationManager.AppSettings["SITE_URL"]' />
<tr>
    <td class="id_pathway">
        <div class="breadcrumb">
            <ul>
                <li><a href='@Url.Action("Dashboard")'>Dashboard</a><img src="/Content/Images/arrow.png"
                    class="arrow_position" /></li>

                @if (ViewBag.BuilderType == "Golfer")
                {
                    <li><a href='@Url.Action("CourseCoordinateSuggestionList")'>@ViewBag.Title</a><img src="/Content/Images/arrow.png" class="arrow_position" /></li>
                }
                @if (ViewBag.BuilderType == "SuperAdmin")
                {
                    <li><a href='@Url.Action("SuggestedCoordinates")'>Manage @ViewBag.Title</a><img src="/Content/Images/arrow.png" class="arrow_position" /></li>
                }

                <li>@ViewBag.pageTitle</li>
            </ul>
            <div class="clr">
            </div>
        </div>
    </td>
</tr>
@Html.Partial("~/Views/Shared/_CourseListScreen.cshtml")
<tr>
    <td id="content_center_td2" valign="top" align="center">
        @if (ViewBag.BuilderType == "CourseAdmin")
        {
            <div style="text-align: left;">
                @if (!(Golfler.Models.CommonFunctions.IsCourseSettingsComplete(Convert.ToInt64(Golfler.Models.LoginInfo.CourseId))))
                {
                    <div id="divCourseSettings" class="info_text" style="color: red;">&#8226;<a style="color: red;" href='/Golfler/CourseAdmin/CoursesUpdate'> Scorecard setup is pending.</a> <span></span></div>
                }
                @if (!(Golfler.Models.CommonFunctions.IsCourseBuilderInitiate(Convert.ToInt64(Golfler.Models.LoginInfo.CourseId))))
                {
                    <div id="divCourseBuilder" class="info_text" style="color: red;">&#8226; Course Builder settings are pending.  <span></span></div>
                }
            </div>
        }
        <div id="content_div" class="form_box organization_form">
            @using (Html.BeginForm("CourseBuilder", null, FormMethod.Post, new { id = "frmSubmit" }))
            {
                <div class="organization_left admin_map">
                    <p>
                        @Html.Label("Course Name")
                        <span style="display: inline-block; padding: 1%;" id="lblCourseName">--NA--</span>
                    </p>
                    @if (ViewBag.BuilderType != "CourseAdmin")
                    {
                        <p>
                            @Html.Label("Address")
                            <span style="display: inline-block; padding: 1%;">@ViewBag.address</span>

                        </p>
                    }
                </div>
                <div class="clr"></div>
                <div class="organization_left admin_map" id="divCourseBuildInformation">
                    <p>
                        @Html.LabelFor(x => x.Title)
                        @Html.TextBoxFor(x => x.Title, new { @class = "userfeilder red-border spacingt5 txtWidth", @maxlength = "50" })
                        @Html.ValidationMessageFor(x => x.Title)
                    </p>
                    <p class="tpspacing">
                        @Html.Label("Select Co-ordinate Type")
                        <label class="widthauto" style="text-align: left;">
                            <input type="radio" id="rdLoadOriginal" name="CoordinateType" value='@CoordinateType.LoadOriginal' checked="checked" />Load Original Co-ordinates
                        </label>
                        <label class="widthauto" style="text-align: left;">
                            <input type="radio" id="rdSetTemporary" name="CoordinateType" value='@CoordinateType.SetTemporary' />Set Temporary Co-ordinates
                        </label>
                    </p>
                    <p class="tpspacing" id="pRecDesc">
                        @Html.Label("Temporary Co-ordinates set for")
                        <span style="width: 70%;">
                            <span style="display: inline-block; padding: 1%; width: auto;" id="spnRecDesc">@ViewBag.RecDescripton </span>
                            <a href="javascript: void(0);" id="ancEditDates" style="display: inline-block; padding-top: 1%" onclick="javascript:openPopup();">Edit Dates</a></span>
                    </p>

                    <p style="display: none;">
                        @Html.LabelFor(x => x.DateFrom)
                        @Html.TextBoxFor(x => x.DateFrom, new { @class = "widthDatepicker userfeilder red-border datepicker spacingt5 adname-1  datefeild border_process adname calc_icon", @maxlength = "50", @readonly = "readonly" })
                        @Html.ValidationMessageFor(x => x.DateFrom)

                    </p>
                    <p style="display: none;">
                        @Html.LabelFor(x => x.DateTo)
                        @Html.TextBoxFor(x => x.DateTo, new { @class = "widthDatepicker userfeilder red-border datepicker spacingt5 adname-1  datefeild border_process adname calc_icon", @maxlength = "50", @readonly = "readonly" })
                        @Html.ValidationMessageFor(x => x.DateTo)


                    </p>
                    <p>

                        @*  <a href="#myModal" id="ancRecurringDates" class="submit-btn update-btn" >click here for rec</a>
                        <input type="button" id="btnTempSettings" value="Click here for Recurring settings" class="blk-btn on" />*@

                        <a href="#myModal" id="btnConfirm" class="submit-btn update-btn" style="display: none;">Submit</a>
                        <input type="button" id="btnTempSettings" class="submit-btn update-btn" style="display: none;" name="btnTempSettings" value="btnTempSettings" />
                        @*   <input type="button" id="btnTest" class="submit-btn update-btn" name="btnTest" value="btnTest" />*@
                    </p>


                </div>
                <div class="clr"></div>
                <div class="organization_left admin_map">
                    <div class="tpspacing">
                        @Html.Label("Hole/Par")
                        <div class="all-radio">
                            @{ 
                    string strPar = "";
                    Dictionary<int, string> objPars = new Dictionary<int, string>();
                    Boolean isPar = false;
                    if (ViewBag.ParDetails != null)
                    {
                        objPars = (Dictionary<int, string>)ViewBag.ParDetails;
                        if (objPars.Count > 0)
                        {
                            isPar = true;

                        }
                    }
                            }
                            @for (var i = 1; i <= 18; i++)
                            {                                   
                                <div style="float: left; padding: 0px 4px;">
                                    <input type="radio" id="rdHoleNumber@(i)" name="HoleNumber" class="clsholenumber" data-hole-number="@(i)" value="@(i)" >
                                    <label for="rdHoleNumber@(i)">@(i)</label>

                                    @{
                                if (isPar)
                                {
                                    strPar = objPars.Where(x => x.Key == i).FirstOrDefault().Value;
                                    if (strPar == "0")
                                    {
                                        strPar = "N/A";
                                    }
                                }
                                else
                                {
                                    strPar = "N/A";
                                }   
                                    }
                                    <div style="text-align: center;">@strPar </div>

                                </div> 
								
                            }
                        </div>
                    </div>

                </div>
                <div class="clr"></div>
                
                            if (ViewBag.BuilderType == "Golfer")
                            { 
                <div class="organization_left admin_map" style="display: none;">
                    <p class="tpspacing">
                        @Html.Label("Co-ordinate Type")
                        <label class="widthauto" style="text-align: left;">
                            <input type="radio" id="rbnOriginalView" name="GolferCoordinateType" value='@CoordinateType.LoadOriginal' checked="checked" />Original Co-ordinates
                        </label>
                        <label class="widthauto" style="text-align: left;">
                            <input type="radio" id="rbnSuggestCoordinate" name="GolferCoordinateType" value='@CoordinateType.SetTemporary' />Suggest Co-ordinates
                        </label>
                    </p>
                </div>
                            }
                <div class="clr"></div>
                <p style="display: none;">
                    <label id="markerDetail"></label>
                </p>
                <div class="clr"></div>
                <div>
                    @if (ViewBag.BuilderType == "Golfer")
                    {
                        <h7 style="color: #15437b">1. Golfer can suggest only Flag coordinates.  </h7>
                        <br />
                        <h7 style="color: #15437b">2. Click on Flag to view its detail.  </h7>
                        <br />
                        <h7 style="color: #15437b">3. Double click on Flag to remove.</h7>
                    }
                    @if (ViewBag.BuilderType == "CourseAdmin")
                    {
                        <h7 style="color: #15437b">1. Click on Tee/Flag to view its detail.  </h7>
                        <br />
                        <h7 style="color: #15437b">2. Double click on Tee/Flag to remove.</h7>
                    }
                    @if (ViewBag.BuilderType == "SuperAdmin")
                    {
                        <h7 style="color: #15437b">1. Click on Tee/Flag to view its detail.  </h7>
                    
                    
                    }
                </div>
                
                <div class="clr"></div>
                <div id="map_cont">
                    <div id="shelf">
                        @if (ViewBag.BuilderType == "CourseAdmin")
                        {
                            <div id="dvForCourseAdmin">
                                <div class="drag_items_heading">Drag Items</div>
                                <ul>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_blue.png" id="dragBlueTee" style="cursor: pointer;" data-item-type="Blue Tee" />
                                        <span>Blue Tee</span>
                                    </li>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_white.png" id="dragWhiteTee" style="cursor: pointer;" data-item-type="White Tee" />
                                        <span>White Tee</span>
                                    </li>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_red.png" id="dragRedTee" style="cursor: pointer;" data-item-type="Red Tee" />
                                        <span>Red Tee</span>
                                    </li>
                                    <li class="dragRedFlag">
                                        <img src="~/images/CourseImage/flag_white.png" id="dragWhiteFlag" style="cursor: pointer;" data-item-type="Flag" />
                                        <span>Flag</span>
                                    </li>
                                </ul>
                            </div>
                        }
                        @if (ViewBag.BuilderType == "Golfer")
                        {
                           
                            <div id="dvForGolfer">
                                <div class="drag_items_heading">Drag Items</div>
                                <ul>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_blue.png" />
                                        <span>Blue Tee</span>
                                    </li>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_white.png" />
                                        <span>White Tee</span>
                                    </li>
                                    <li class="dragTee">
                                        <img src="~/images/CourseImage/tee_red.png" />
                                        <span>Red Tee</span>
                                    </li>
                                    <li class="dragRedFlag">
                                        <img src="~/images/CourseImage/flag_white.png" id="dragWhiteFlag" style="cursor: pointer;" data-item-type="Flag" />
                                        <span>Flag</span>
                                    </li>
                                </ul>
                            </div>
                        }
                        @if (ViewBag.BuilderType == "SuperAdmin")
                        {
                            <div class="drag_items_heading">Items</div>
                            <ul>
                                <li class="">
                                    <img src="~/images/CourseImage/tee_blue.png" />
                                    <span>&nbsp; &nbsp; Blue Tee</span>
                                </li>
                                <li class="">
                                    <img src="~/images/CourseImage/tee_white.png" />
                                    <span>&nbsp; &nbsp; White Tee</span>
                                </li>
                                <li class="">
                                    <img src="~/images/CourseImage/tee_red.png" />
                                    <span>&nbsp; &nbsp; Red Tee</span>
                                </li>
                                <li class="">
                                    <img src="~/images/CourseImage/flag_white.png" />
                                    <span>&nbsp; &nbsp; Flag</span>
                                </li>
                            </ul>
                        }

                    </div>
                    <div id="map_canvas" style="height: 650px; width: 100%; border: 2px solid #fff; box-shadow: 0px 0px 5px 0px #A7A7A7;">
                    </div>

                </div>
                <div class="clr">
                </div>
               
                <div class="clr">
                </div>
                <div class="organization_left admin_map" id="divGolferComments">
                    <p>
                        @Html.Label("Comments")
                        @Html.TextArea("txtComments")

                    </p>
                </div>
                <div class="clr">
                </div>
                <div class="organization_left admin_map" id="divSuperAdmin">
                    <p>
                        @Html.Label("Submitted On")

                        <span style="display: inline-block; padding: 1%;">@ViewBag.submittedOn</span>
                    </p>
                    <p>
                        @Html.Label("Submitted By")

                        <span style="display: inline-block; padding: 1%;">@ViewBag.submittedby</span>
                    </p>
                    <p>
                        @Html.Label("Comments")

                        <span style="display: inline-block; padding: 1%;">@ViewBag.CommentsbyGolfer</span>
                    </p>

                    <p>
                        @Html.Label("Select Status")
                        @Html.DropDownList("Status")
                    </p>
                </div>
                <div class="clr">
                </div>
                <div align="center" class="center-button">
                    <input type="button" id="btnSubmit" class="submit-btn update-btn" name="btnSave" onclick="save('saveallatonce')" value="Save" action="add" />
                    <input type="hidden" id="hdnCourseId" name="hdnCourseId" value="@ViewBag.CourseId" />
                    <input type="hidden" id="hdnBuilderType" name="hdnBuilderType" value="@ViewBag.BuilderType" />
                    <input type="hidden" id="hdnCourseBuilderId" name="hdnCourseBuilderId" value="@ViewBag.CourseBuilderId" />

                </div>
            }
        </div>
        @if (ViewBag.BuilderType != "SuperAdmin")
        {
            @Html.Partial("~/Views/Shared/_CourseBuilderListScreen.cshtml")
        }
    </td>
</tr>
<script type="text/javascript">
    $(function () {
        var $radios = $('input:radio[name=CoordinateType]');
        if ($radios.is(':checked') === false) {
            $radios.filter('[value=' + '@CoordinateType.LoadOriginal' + ']').prop('checked', true);
        }
    });
</script>

<div id="myModal" class="reveal-modal" style="display: none; top: 100px; width: 480px;">
</div>
