@using Golfler.Models

<style>
    .tempwidth {
        width: 40% !important;
    }

    .tempwidthForDdl {
        width: 96% !important;
    }

    #txtCourseName {
        width: 14% !important;
    }

    .status {
        width: 100% !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        BindGrid();

        $('#btnAddNewResolution').click(function () {
            window.location = '@Url.Action("AddResolutionMessages")';
        });

        $('#txtUserNameSearch').val('@TempData["GolferName"]');
    });


    function BindGrid() {
        var hdnGolfer = true;
        var hdnCourse = true;
        if ($("#hdnLoadFrom").val() == "Golfer") {
            hdnGolfer = true;
            hdnCourse = false;
        }
        else {
            hdnGolfer = false;
            hdnCourse = true;
        }

        bindJqGridNoMultiSelect('list', 'pager', '@Url.Action("GetResolutionMessages", "golfer")',
             ['ID', 'sentByEncryptedId', 'Sent By', 'Start Date-Time', 'Message Type', 'Course Name', 'Latest Reply By', 'Latest Date-Time',
              'Latest Comment', 'Status', 'Action', 'DoActive', 'GolferID', 'IsRead'],
             [{ name: 'ID', index: 'ID', width: 10, hidden: true },
              { name: 'sentByEncryptedId', index: 'sentByEncryptedId', width: 10, hidden: true },
              { name: 'sentBy', index: 'sentBy', width: 50, hidden: hdnGolfer, formatter: setOrderLink },
              //{ name: 'CreatedDate', index: 'CreatedDate', width: 50, formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'm/d/Y  h:i A' } },
              { name: 'CreatedDate', index: 'CreatedDate', width: 50 },
              { name: 'strResolutionType', index: 'strResolutionType', width: 50, },
              { name: 'courseName', index: 'courseName', width: 50, hidden: hdnCourse },
              { name: 'LatestReplyBy', index: 'LatestReplyBy', width: 50, },
              //{ name: 'LatestCreatedDate', index: 'LatestCreatedDate', width: 50, formatter: 'date', formatoptions: { srcformat: 'U', newformat: 'm/d/Y  h:i A' } },
              { name: 'LatestCreatedDate', index: 'LatestCreatedDate', width: 50 },
              { name: 'LatestComments', index: 'LatestComments', width: 50, },
              { name: 'Status', index: 'Status', width: 50, sortable: false, formatter: SetActiveInActive },
              { name: 'Status', index: 'Status', width: 50, formatter: SetEditLink },
              { name: 'DoActive', index: 'DoActive', hidden: true },
              { name: 'GolferID', index: 'GolferID', hidden: true },
              { name: 'IsRead', index: 'IsRead', width: 50, hidden: true }
             ], 'ID', 'desc',
             {
                 "Courseid": (function () {
                     return $("#hdnCourseID").val();
                 }),
                 "status": (function () {
                     return $("#ddlStatus").val();
                 }),
                 "fromdate": (function () {
                     return $("#txtFromDate").val();
                 }),
                 "todate": (function () {
                     return $("#txtToDate").val();
                 }),
                 "username": (function () {
                     return '@TempData["GolferName"]' != '' ? '@TempData["GolferName"]' : $("#txtUserNameSearch").val();
                 }),
                 "MessageSentTo": (function () {
                     return $("#ddlMessageSentTo").val();
                 }),
                 "strResolutionType": (function () {
                     return $("#ddlResolutionType").val();
                 })
             }, '');
    }


    function searchClick() {
        BindGrid();
    }

    function setOrderLink(cellvalue, options, rowObject) {
        var Eid = rowObject["sentByEncryptedId"];

        if (rowObject["GolferID"] == 0) {
            return cellvalue;
        }
        else {
            return "<a href='OrderListByGolfer?eid=" + Eid + "' >" + cellvalue + "</a>";
        }
    }

    function SetEditLink(cellvalue, options, rowObject) {

        try {
            var Eid = rowObject["EID"];
            var status = rowObject["Status"];
            if (status == '@MessageStatusType.Closed') {
                return "Closed"
            } else {

                if ($('#UpdateFlag').size() != 0 && $('#UpdateFlag').val() != "True")
                    return "<a href='javascript:void(0)' onclick=javascript:NonAccessMsg(); >Reply</a>";
                    //  return cellvalue;
                else
                    return "<a href='ResolutionMessageReply?eid=" + Eid + "' >Reply</a>";
            }
        }
        catch (ex) { alert(ex.message); }
    }

    function SetActiveInActive(cellvalue, options, rowObject) {
        try {


            if (cellvalue.trim() == '@MessageStatusType.Open')
                return "Open";
            else if (cellvalue.trim() == '@MessageStatusType.Replyed' || cellvalue == true)
                return "Reply";
            else
                return "Closed"
        }
        catch (ex) {
            alert(ex.message);
        }
    }

    function UpdateRowStatus(id, status) {
        try {
            UpdateStatus('UpdateRoleStatus', 'Golfler/Golfer', id, status, 'list');
        }
        catch (ex) { alert(ex.message); }
    };


    function checkSearch() {

        var msg = "";
        var strFromDate = $("#txtFromDate").val();
        var strToDate = $("#txtToDate").val();

        if (strFromDate != "" && strToDate != "") {
            var dateFrom = Date.parse(strFromDate);
            var dateTo = Date.parse(strToDate);
            if (dateFrom > dateTo) {
                msg = "From Date should be less then To Date.";
            }
        }

        if (msg != "") {
            showStickMessage(msg);
            return false;
        }
        else {
            $('#list').trigger('reloadGrid', [{ page: 1 }]);
        }
    }


</script>
<tr>
    <td class="id_pathway" valign="middle">
        <div class="breadcrumb">
            <ul>
                <li><a href='@Url.Action("Dashboard")'>Dashboard</a><img src="/Content/Images/arrow.png"
                    class="arrow_position" /></li>
                <li>Manage Inbox</li>
            </ul>
            <div class="clr">
            </div>
        </div>
    </td>
</tr>
<tr>
    <td id="content_center_td2" valign="top" align="center">
        <div class="form_box">
            <div class="search-advertiser">
                <label style="width: 3% !important;">
                    Search</label>

                @if (ViewBag.LoadFrom == "Golfer")
                {
                    <div class="drop_down1">
                        <select name="ddlMessageSentTo" id="ddlMessageSentTo" class="status tempwidthForDdl">
                            <option value=''>Messages sent to both</option>
                            <option value='CA'>Messages sent to Courses</option>
                            <option value='SA'>Messages sent to Golfler</option>
                        </select>
                    </div>
                }

                @if (LoginInfo.LoginUserType == "CK" || LoginInfo.LoginUserType == "CC" || LoginInfo.LoginUserType == "CR" || LoginInfo.LoginUserType == "CA" || LoginInfo.LoginUserType == "CP")
                {//course admin
                    <input type="text" placeholder="Sent By" id="txtUserNameSearch" class="searchfeild adname" style="margin-bottom: 2px; width: 13% !important;" size="30">

                }
                else
                {   
                    @Html.Partial("~/Views/Tools/CourseOnlyAutoComplete.cshtml")
                }



                <div class="drop_down1" style="width: 9% !important;">
                    <select name="ddlStatus" id="ddlStatus" class="status tempwidthForDdl">
                        <option value=''>Select Status</option>
                        <option value='@MessageStatusType.Open'>Open</option>
                        <option value='@MessageStatusType.Closed'>Closed</option>
                        <option value='@MessageStatusType.Replyed'>Reply</option>
                    </select>
                </div>
                <div class="drop_down1" style="width: 12.5% !important;">
                    @Html.DropDownList("ResolutionType", (SelectList)(ViewBag.ResolutionType), "Select Message Type", new { id = "ddlResolutionType", @class = "status" })
                </div>
                <label class="width22 vacdate width19">
                    From start date</label>
                <input type="text" placeholder="Date From" id="txtFromDate" style="width: 7%;" class="datepicker spacingt5 adname-1  datefeild border_process adname calc_icon ">

                <label class="width22 vacdate width19 width_auto">
                    To start date</label>
                <input placeholder="Date To" type="text" id="txtToDate" style="width: 7%;" class="datepicker spacingt5 adname-1  datefeild border_process adname calc_icon ">
                <img src="/Content/Images/search_icon.png" border="0" alt="search" class="go-btn floatleft"
                    id="fbox_jqgAdminUser_search" onclick="javascript: return checkSearch();" />

                <div class="clr">
                </div>

            </div>

            <div style="padding: 1px">
                <input type="button" value="Send Resolution Message" id="btnAddNewResolution" class="submit-btn cancel-btn" />
                <div class="clr"></div>
                @if (ViewBag.LoadFrom != "Golfer")
                {
                    <p>- Click on 'Send by' column name to view the order listing.</p>
                }
                <p>- Green color represent unread messages.</p>
            </div>
            <div id="page-wrap">
                <table id="list" cellpadding="0" cellspacing="0" style="width: 100%;" class="jqgridTable">
                </table>
                <div id="pager" style="width: 100%;">
                </div>
                <input type="hidden" id="hdnId" value='@Golfler.Models.LoginInfo.UserId' />
                <input type="hidden" id="hdnLoadFrom" value='@ViewBag.LoadFrom' />
            </div>
            <div class="clr">
            </div>


        </div>
    </td>
</tr>
<input type="hidden" id="hdnConfirm" />