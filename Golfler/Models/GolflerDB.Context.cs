//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Golfler.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GolflerEntities : DbContext
    {
        public GolflerEntities()
            : base("name=GolflerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<GF_Category> GF_Category { get; set; }
        public DbSet<GF_CourseMenu> GF_CourseMenu { get; set; }
        public DbSet<GF_Courses> GF_Courses { get; set; }
        public DbSet<GF_CourseSuggest> GF_CourseSuggest { get; set; }
        public DbSet<GF_CourseUsers> GF_CourseUsers { get; set; }
        public DbSet<GF_GolferWallet> GF_GolferWallet { get; set; }
        public DbSet<GF_MenuItems> GF_MenuItems { get; set; }
        public DbSet<GF_OrderAcceptReject> GF_OrderAcceptReject { get; set; }
        public DbSet<GF_OrderDetails> GF_OrderDetails { get; set; }
        public DbSet<GF_Modules_Group> GF_Modules_Group { get; set; }
        public DbSet<GF_RoleModules> GF_RoleModules { get; set; }
        public DbSet<GF_Settings> GF_Settings { get; set; }
        public DbSet<GF_EmailTemplatesFields> GF_EmailTemplatesFields { get; set; }
        public DbSet<GF_EmailTemplates> GF_EmailTemplates { get; set; }
        public DbSet<GF_SMTPSettings> GF_SMTPSettings { get; set; }
        public DbSet<GF_Templates> GF_Templates { get; set; }
        public DbSet<GF_SubCategory> GF_SubCategory { get; set; }
        public DbSet<GF_CourseInfo> GF_CourseInfo { get; set; }
        public DbSet<GF_Messages> GF_Messages { get; set; }
        public DbSet<GF_PromoCode> GF_PromoCode { get; set; }
        public DbSet<GF_CourseBuilder> GF_CourseBuilder { get; set; }
        public DbSet<GF_CourseBuilderHolesDetail> GF_CourseBuilderHolesDetail { get; set; }
        public DbSet<GF_StaticPages> GF_StaticPages { get; set; }
        public DbSet<GF_IncomeSlab> GF_IncomeSlab { get; set; }
        public DbSet<GF_COUNTRY> GF_COUNTRY { get; set; }
        public DbSet<GF_STATE> GF_STATE { get; set; }
        public DbSet<GF_WeatherDetails> GF_WeatherDetails { get; set; }
        public DbSet<GF_Order> GF_Order { get; set; }
        public DbSet<GF_ResolutionCenter> GF_ResolutionCenter { get; set; }
        public DbSet<GF_GolferUser> GF_GolferUser { get; set; }
        public DbSet<GF_ResolutionMessageHistory> GF_ResolutionMessageHistory { get; set; }
        public DbSet<GF_MassMessages> GF_MassMessages { get; set; }
        public DbSet<GF_FoodCommission> GF_FoodCommission { get; set; }
        public DbSet<GF_CourseFoodItem> GF_CourseFoodItem { get; set; }
        public DbSet<GF_CourseFoodItemDetail> GF_CourseFoodItemDetail { get; set; }
        public DbSet<GF_SuggestCourseCoordinate> GF_SuggestCourseCoordinate { get; set; }
        public DbSet<GF_SuggestCoordinateDetail> GF_SuggestCoordinateDetail { get; set; }
        public DbSet<GF_CourseVisitLog> GF_CourseVisitLog { get; set; }
        public DbSet<GF_CourseEmailTemplates> GF_CourseEmailTemplates { get; set; }
        public DbSet<GF_OrderRefund> GF_OrderRefund { get; set; }
        public DbSet<GF_GolferRating> GF_GolferRating { get; set; }
        public DbSet<GF_COUNTY> GF_COUNTY { get; set; }
        public DbSet<GF_CourseBuilderRecDates> GF_CourseBuilderRecDates { get; set; }
        public DbSet<GF_GolferPaceofPlay> GF_GolferPaceofPlay { get; set; }
        public DbSet<GF_MenuItemOption> GF_MenuItemOption { get; set; }
        public DbSet<GF_ContactList> GF_ContactList { get; set; }
        public DbSet<GF_Feedback> GF_Feedback { get; set; }
        public DbSet<GF_GamePlayPlayerInfo> GF_GamePlayPlayerInfo { get; set; }
        public DbSet<GF_GamePlayScoreCard> GF_GamePlayScoreCard { get; set; }
        public DbSet<GF_GolferChangingLocation> GF_GolferChangingLocation { get; set; }
        public DbSet<GF_OrderMenuOptionDetail> GF_OrderMenuOptionDetail { get; set; }
        public DbSet<GF_UserCurrentPosition> GF_UserCurrentPosition { get; set; }
        public DbSet<GF_BlockUserList> GF_BlockUserList { get; set; }
        public DbSet<GF_CourseBlockUserList> GF_CourseBlockUserList { get; set; }
        public DbSet<GF_CourseMemberShip> GF_CourseMemberShip { get; set; }
        public DbSet<GF_GamePlayRound> GF_GamePlayRound { get; set; }
        public DbSet<GF_Golfer> GF_Golfer { get; set; }
        public DbSet<GF_CourseFoodItemOption> GF_CourseFoodItemOption { get; set; }
        public DbSet<GF_Timezone> GF_Timezone { get; set; }
        public DbSet<GF_AdminUsers> GF_AdminUsers { get; set; }
        public DbSet<GF_Roles> GF_Roles { get; set; }
        public DbSet<GF_Modules> GF_Modules { get; set; }
    
        public virtual ObjectResult<GF_SP_GetGolfersListingByCourseId_Result> GF_SP_GetGolfersListingByCourseId(Nullable<long> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetGolfersListingByCourseId_Result>("GF_SP_GetGolfersListingByCourseId", courseIdParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetOrderAnalyticsMenuSearch_Result> GF_SP_GetOrderAnalyticsMenuSearch(Nullable<long> golferid, string type, Nullable<long> course, Nullable<long> foodItem, Nullable<long> subfoodCategory, string miles)
        {
            var golferidParameter = golferid.HasValue ?
                new ObjectParameter("Golferid", golferid) :
                new ObjectParameter("Golferid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(long));
    
            var foodItemParameter = foodItem.HasValue ?
                new ObjectParameter("FoodItem", foodItem) :
                new ObjectParameter("FoodItem", typeof(long));
    
            var subfoodCategoryParameter = subfoodCategory.HasValue ?
                new ObjectParameter("SubfoodCategory", subfoodCategory) :
                new ObjectParameter("SubfoodCategory", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetOrderAnalyticsMenuSearch_Result>("GF_SP_GetOrderAnalyticsMenuSearch", golferidParameter, typeParameter, courseParameter, foodItemParameter, subfoodCategoryParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetOrderAnalyticsSearch_Result> GF_SP_GetOrderAnalyticsSearch(Nullable<long> golferid, string type, Nullable<long> course, Nullable<long> foodItem, Nullable<long> subfoodCategory, string miles)
        {
            var golferidParameter = golferid.HasValue ?
                new ObjectParameter("Golferid", golferid) :
                new ObjectParameter("Golferid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(long));
    
            var foodItemParameter = foodItem.HasValue ?
                new ObjectParameter("FoodItem", foodItem) :
                new ObjectParameter("FoodItem", typeof(long));
    
            var subfoodCategoryParameter = subfoodCategory.HasValue ?
                new ObjectParameter("SubfoodCategory", subfoodCategory) :
                new ObjectParameter("SubfoodCategory", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetOrderAnalyticsSearch_Result>("GF_SP_GetOrderAnalyticsSearch", golferidParameter, typeParameter, courseParameter, foodItemParameter, subfoodCategoryParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetOrderAnalyticsGraphSearch_Result> GF_SP_GetOrderAnalyticsGraphSearch(Nullable<long> golferid, string type, Nullable<long> course, Nullable<long> foodItem, Nullable<long> subfoodCategory, string miles)
        {
            var golferidParameter = golferid.HasValue ?
                new ObjectParameter("Golferid", golferid) :
                new ObjectParameter("Golferid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courseParameter = course.HasValue ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(long));
    
            var foodItemParameter = foodItem.HasValue ?
                new ObjectParameter("FoodItem", foodItem) :
                new ObjectParameter("FoodItem", typeof(long));
    
            var subfoodCategoryParameter = subfoodCategory.HasValue ?
                new ObjectParameter("SubfoodCategory", subfoodCategory) :
                new ObjectParameter("SubfoodCategory", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetOrderAnalyticsGraphSearch_Result>("GF_SP_GetOrderAnalyticsGraphSearch", golferidParameter, typeParameter, courseParameter, foodItemParameter, subfoodCategoryParameter, milesParameter);
        }
    
        public virtual int GF_SP_CopyModules(Nullable<long> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GF_SP_CopyModules", courseIDParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetEmployeeAnalyticsGraphSearch_Result> GF_SP_GetEmployeeAnalyticsGraphSearch(Nullable<long> userId, string type, Nullable<long> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetEmployeeAnalyticsGraphSearch_Result>("GF_SP_GetEmployeeAnalyticsGraphSearch", userIdParameter, typeParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetEmployeePersonalAnalyticsGraphSearch_Result> GF_SP_GetEmployeePersonalAnalyticsGraphSearch(Nullable<long> userId, string type, Nullable<long> courseId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> dateSearchType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var dateSearchTypeParameter = dateSearchType.HasValue ?
                new ObjectParameter("DateSearchType", dateSearchType) :
                new ObjectParameter("DateSearchType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetEmployeePersonalAnalyticsGraphSearch_Result>("GF_SP_GetEmployeePersonalAnalyticsGraphSearch", userIdParameter, typeParameter, courseIdParameter, fromdateParameter, todateParameter, dateSearchTypeParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetGolferSpend_Result> GF_SP_GetGolferSpend(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetGolferSpend_Result>("GF_SP_GetGolferSpend", iDParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetGolferPlay_Result> GF_SP_GetGolferPlay(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetGolferPlay_Result>("GF_SP_GetGolferPlay", iDParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetNewIncomingMsgs_Result> GF_SP_GetNewIncomingMsgs(Nullable<long> iD, Nullable<int> isGolfer)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var isGolferParameter = isGolfer.HasValue ?
                new ObjectParameter("IsGolfer", isGolfer) :
                new ObjectParameter("IsGolfer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetNewIncomingMsgs_Result>("GF_SP_GetNewIncomingMsgs", iDParameter, isGolferParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCoursesByRadius_Result> GF_SP_GetCoursesByRadius(Nullable<long> courseId, string miles)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCoursesByRadius_Result>("GF_SP_GetCoursesByRadius", courseIdParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCourseAdminUsersByRadius_Result> GF_SP_GetCourseAdminUsersByRadius(Nullable<long> courseId, string miles)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseAdminUsersByRadius_Result>("GF_SP_GetCourseAdminUsersByRadius", courseIdParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCourseGolferUsersByRadius_Result> GF_SP_GetCourseGolferUsersByRadius(Nullable<long> courseId, string miles)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseGolferUsersByRadius_Result>("GF_SP_GetCourseGolferUsersByRadius", courseIdParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCourseGolferUsersLocationByRadius_Result> GF_SP_GetCourseGolferUsersLocationByRadius(Nullable<long> courseId, string miles)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseGolferUsersLocationByRadius_Result>("GF_SP_GetCourseGolferUsersLocationByRadius", courseIdParameter, milesParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCourseSiteVisits_Result> GF_SP_GetCourseSiteVisits(Nullable<long> iD, Nullable<int> type)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseSiteVisits_Result>("GF_SP_GetCourseSiteVisits", iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetCourseRevenue_Result> GF_SP_GetCourseRevenue(Nullable<long> iD, Nullable<int> type)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseRevenue_Result>("GF_SP_GetCourseRevenue", iDParameter, typeParameter);
        }
    }
}
