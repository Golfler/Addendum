//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseWebApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GolflerEntities : DbContext
    {
        public GolflerEntities()
            : base("name=GolflerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<GF_AdminUsers> GF_AdminUsers { get; set; }
        public DbSet<GF_Category> GF_Category { get; set; }
        public DbSet<GF_Courses> GF_Courses { get; set; }
        public DbSet<GF_CourseSuggest> GF_CourseSuggest { get; set; }
        public DbSet<GF_CourseUsers> GF_CourseUsers { get; set; }
        public DbSet<GF_Golfer> GF_Golfer { get; set; }
        public DbSet<GF_GolferWallet> GF_GolferWallet { get; set; }
        public DbSet<GF_MenuItems> GF_MenuItems { get; set; }
        public DbSet<GF_OrderDetails> GF_OrderDetails { get; set; }
        public DbSet<GF_SubCategory> GF_SubCategory { get; set; }
        public DbSet<GF_CourseMenu> GF_CourseMenu { get; set; }
        public DbSet<GF_CourseInfo> GF_CourseInfo { get; set; }
        public DbSet<GF_OrderAcceptReject> GF_OrderAcceptReject { get; set; }
        public DbSet<GF_Messages> GF_Messages { get; set; }
        public DbSet<GF_Feedback> GF_Feedback { get; set; }
        public DbSet<GF_GolferRating> GF_GolferRating { get; set; }
        public DbSet<GF_WeatherDetails> GF_WeatherDetails { get; set; }
        public DbSet<GF_Order> GF_Order { get; set; }
        public DbSet<GF_UserCurrentPosition> GF_UserCurrentPosition { get; set; }
        public DbSet<GF_EmailTemplates> GF_EmailTemplates { get; set; }
        public DbSet<GF_EmailTemplatesFields> GF_EmailTemplatesFields { get; set; }
        public DbSet<GF_SMTPSettings> GF_SMTPSettings { get; set; }
        public DbSet<GF_GolferUser> GF_GolferUser { get; set; }
        public DbSet<GF_Settings> GF_Settings { get; set; }
        public DbSet<GF_CourseFoodItem> GF_CourseFoodItem { get; set; }
        public DbSet<GF_CourseFoodItemDetail> GF_CourseFoodItemDetail { get; set; }
        public DbSet<GF_FoodCommission> GF_FoodCommission { get; set; }
        public DbSet<GF_PromoCode> GF_PromoCode { get; set; }
        public DbSet<GF_CourseEmailTemplates> GF_CourseEmailTemplates { get; set; }
        public DbSet<GF_CourseBuilder> GF_CourseBuilder { get; set; }
        public DbSet<GF_CourseBuilderHolesDetail> GF_CourseBuilderHolesDetail { get; set; }
        public DbSet<GF_GolferChangingLocation> GF_GolferChangingLocation { get; set; }
        public DbSet<GF_OrderMenuOptionDetail> GF_OrderMenuOptionDetail { get; set; }
        public DbSet<GF_MenuItemOption> GF_MenuItemOption { get; set; }
        public DbSet<GF_BlockUserList> GF_BlockUserList { get; set; }
        public DbSet<GF_ContactList> GF_ContactList { get; set; }
        public DbSet<GF_COUNTRY> GF_COUNTRY { get; set; }
        public DbSet<GF_COUNTY> GF_COUNTY { get; set; }
        public DbSet<GF_CourseBlockUserList> GF_CourseBlockUserList { get; set; }
        public DbSet<GF_CourseBuilderRecDates> GF_CourseBuilderRecDates { get; set; }
        public DbSet<GF_CourseMemberShip> GF_CourseMemberShip { get; set; }
        public DbSet<GF_CourseVisitLog> GF_CourseVisitLog { get; set; }
        public DbSet<GF_GamePlayPlayerInfo> GF_GamePlayPlayerInfo { get; set; }
        public DbSet<GF_GamePlayRound> GF_GamePlayRound { get; set; }
        public DbSet<GF_GamePlayScoreCard> GF_GamePlayScoreCard { get; set; }
        public DbSet<GF_GolferPaceofPlay> GF_GolferPaceofPlay { get; set; }
        public DbSet<GF_GolferPaceofPlay_Temp> GF_GolferPaceofPlay_Temp { get; set; }
        public DbSet<GF_IncomeSlab> GF_IncomeSlab { get; set; }
        public DbSet<GF_MassMessages> GF_MassMessages { get; set; }
        public DbSet<GF_OrderRefund> GF_OrderRefund { get; set; }
        public DbSet<GF_ResolutionCenter> GF_ResolutionCenter { get; set; }
        public DbSet<GF_ResolutionMessageHistory> GF_ResolutionMessageHistory { get; set; }
        public DbSet<GF_STATE> GF_STATE { get; set; }
        public DbSet<GF_StaticPages> GF_StaticPages { get; set; }
        public DbSet<GF_SuggestCoordinateDetail> GF_SuggestCoordinateDetail { get; set; }
        public DbSet<GF_SuggestCourseCoordinate> GF_SuggestCourseCoordinate { get; set; }
        public DbSet<GF_Templates> GF_Templates { get; set; }
        public DbSet<GF_Timezone> GF_Timezone { get; set; }
        public DbSet<GF_CourseFoodItemOption> GF_CourseFoodItemOption { get; set; }
        public DbSet<GF_Modules> GF_Modules { get; set; }
        public DbSet<GF_Modules_Group> GF_Modules_Group { get; set; }
        public DbSet<GF_RoleModules> GF_RoleModules { get; set; }
        public DbSet<GF_Roles> GF_Roles { get; set; }
    
        public virtual ObjectResult<GF_SP_GetCourseLocation_Result> GF_SP_GetCourseLocation(string latitude, string longitude, Nullable<double> distance)
        {
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetCourseLocation_Result>("GF_SP_GetCourseLocation", latitudeParameter, longitudeParameter, distanceParameter);
        }
    
        public virtual int GF_SP_GetMessageListing(Nullable<long> pgNo, Nullable<decimal> pgSize, Nullable<long> msgFrom, Nullable<long> msgTo, string isMessagesFromGolfer, string defaultImagePath, string golferImagePath, string courseImagePath)
        {
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(long));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(decimal));
    
            var msgFromParameter = msgFrom.HasValue ?
                new ObjectParameter("MsgFrom", msgFrom) :
                new ObjectParameter("MsgFrom", typeof(long));
    
            var msgToParameter = msgTo.HasValue ?
                new ObjectParameter("MsgTo", msgTo) :
                new ObjectParameter("MsgTo", typeof(long));
    
            var isMessagesFromGolferParameter = isMessagesFromGolfer != null ?
                new ObjectParameter("IsMessagesFromGolfer", isMessagesFromGolfer) :
                new ObjectParameter("IsMessagesFromGolfer", typeof(string));
    
            var defaultImagePathParameter = defaultImagePath != null ?
                new ObjectParameter("DefaultImagePath", defaultImagePath) :
                new ObjectParameter("DefaultImagePath", typeof(string));
    
            var golferImagePathParameter = golferImagePath != null ?
                new ObjectParameter("GolferImagePath", golferImagePath) :
                new ObjectParameter("GolferImagePath", typeof(string));
    
            var courseImagePathParameter = courseImagePath != null ?
                new ObjectParameter("CourseImagePath", courseImagePath) :
                new ObjectParameter("CourseImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GF_SP_GetMessageListing", pgNoParameter, pgSizeParameter, msgFromParameter, msgToParameter, isMessagesFromGolferParameter, defaultImagePathParameter, golferImagePathParameter, courseImagePathParameter);
        }
    
        public virtual ObjectResult<GF_SP_GetOrderHistory_Result> GF_SP_GetOrderHistory(Nullable<long> referenceID, string referenceType, string name, Nullable<System.DateTime> orderDate)
        {
            var referenceIDParameter = referenceID.HasValue ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(long));
    
            var referenceTypeParameter = referenceType != null ?
                new ObjectParameter("ReferenceType", referenceType) :
                new ObjectParameter("ReferenceType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_SP_GetOrderHistory_Result>("GF_SP_GetOrderHistory", referenceIDParameter, referenceTypeParameter, nameParameter, orderDateParameter);
        }
    
        public virtual ObjectResult<GF_MenuItems> GF_SP_GetMenuCampare(string courseIDs, string searchText)
        {
            var courseIDsParameter = courseIDs != null ?
                new ObjectParameter("CourseIDs", courseIDs) :
                new ObjectParameter("CourseIDs", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_MenuItems>("GF_SP_GetMenuCampare", courseIDsParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<GF_MenuItems> GF_SP_GetMenuCampare(string courseIDs, string searchText, MergeOption mergeOption)
        {
            var courseIDsParameter = courseIDs != null ?
                new ObjectParameter("CourseIDs", courseIDs) :
                new ObjectParameter("CourseIDs", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GF_MenuItems>("GF_SP_GetMenuCampare", mergeOption, courseIDsParameter, searchTextParameter);
        }
    }
}
